#!/usr/bin/env bash

jobEnvFile=$1
additionalEnv=""
if [[ "${2^^}" == "DRYRUN" ]]; then
    dryRun=$2
fi

configDir=$(dirname "$jobEnvFile")
fileName=$(basename "$jobEnvFile")
if [[ "$fileName" == "db."* ]]; then
    #DB file is sent, requires Repo file as well
    repoName=$(echo "$fileName" | cut -d. -f 2- | rev | cut -d. -f 3- | rev)
    repoFile="$configDir/repo.${repoName}.env"
    additionalEnv="--env-file \"$repoFile\""
    jobTypeParam=""
else
    jobTypeParam="-e REPO_CRAWLER_ACCOUNT_DISCOVERY=true -e REPO_CRAWLER_DATA_CLASSIFICATION=false -e REPO_CRAWLER_REPO_DATABASE=none"
fi

cpEnvFile="$configDir/controlplane.env"

if [ ! -r "$jobEnvFile" ]; then
    echo "Unable to find job file: '$jobEnvFile'"
    exit 1
elif [[ -n "$repoFile" && ! -r "$repoFile" ]]; then
    echo "unable to access  repo file for data discovery: '$repoFile'"
elif [ -z "$cpEnvFile" ]; then
    echo "Unable to find Control Plan config file: '$cpEnvFile'"
    exit 1
fi

image="us-docker.pkg.dev/cyralinc/cyral-repo-crawler/cyral-repo-crawler:v0.5.3"

dockercmd="docker run --rm ${dryRun:+ -e REPO_CRAWLER_DRY_RUN=true} ${additionalEnv} ${jobTypeParam} --env-file \"$jobEnvFile\" --env-file \"$cpEnvFile\" $image"
if ! sudoOutput=$(eval sudo -n "$dockercmd" 2>&1); then
    if ! stdOutput=$(eval "$dockercmd" 2>&1); then
        echo "FAILED to invoke crawler job!"
        echo "Sudo Attempt: $sudoOutput"
        echo "Standard Attempt: $stdOutput"
    else
        output="$stdOutput"
    fi
else
output="$sudoOutput"
fi
echo "$output"